---

- name: "Install icinga2 on Linux"
  include_tasks: "install-{{ ansible_os_family }}.yml"
  tags:
    - install
    - update

- name: create directory /etc/icinga2/custom_conf.d
  file:
    dest: /etc/icinga2/custom_conf.d
    state: directory
    mode: 0700
    owner: "{{icinga2_user[ansible_os_family]}}"
    group: "{{icinga2_group[ansible_os_family]}}"

- name: create directory /etc/icinga2/zones.d/global-templates
  file:
    dest: "/etc/icinga2/zones.d/global-templates"
    state: directory
    mode: 0700
    owner: "{{icinga2_user[ansible_os_family]}}"
    group: "{{icinga2_group[ansible_os_family]}}"

- name: exclude conf.d, include custom_conf.d
  lineinfile:
    path: /etc/icinga2/icinga2.conf
    regexp: '^include_recursive'
    line: 'include_recursive "custom_conf.d"'

- name: "upgrade IDO schema"
  include_tasks: "feature_ido-mysql_update.yml"
  when: track_icinga2_install is defined
        and track_icinga2_install.changed

- name: "Config Role"
  include_tasks: "config-{{icinga2_role}}.yml"
  tags:
    - zones

- name: Include special feature tasks for {{ icinga2_feature_name }}
  include_tasks: "feature_{{ icinga2_feature_name }}.yml"
  vars: 
    icinga2_feature_name: "{{fItem.key}}"
  with_dict: "{{ feature_has_handler }}"
  loop_control:
    loop_var: fItem
  when: fItem.value and (icinga2_feature_name in icinga2_features)
  tags:
    - config
    - feature

- name: include feature tasks
  include_tasks: "feature_generic.yml"
  vars:
    icinga2_feature_name: "{{fItem.key}}"
  with_dict: "{{ feature_has_handler }}"
  loop_control:
    loop_var: fItem

- name: Enable and start service icinga2
  service:
    name: icinga2
    state: started
    enabled: yes
